user  root;
worker_processes  2;

error_log  logs/error.log;
#error_log  /logs/error.log  notice;
#error_log  /logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}



http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    upstream websocket {
      server localhost:5000;
    }





  server {
    listen       5001;
    server_name  localhost;

    #charset koi8-r;
    access_log  logs/ws.access.log  main;


    location /ws {
      proxy_http_version 1.1;
      proxy_buffering off;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_pass http://websocket;
    }

    #error_page  404              /404.html;
    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   html;
    }
  }

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;
        access_log  logs/host.access.log  main;

        location /get_camera {
           proxy_pass http://localhost:5000/get_camera;
        }

        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #    proxy_pass http://localhost:5000;
        #}

        #location /socket.io {
        #    proxy_http_version 1.1;
        #    proxy_buffering off;
        #    proxy_set_header Upgrade $http_upgrade;
        #    proxy_set_header Connection "Upgrade";
        #    proxy_pass http://localhost:5000/socket.io;
		    #}

        # vue WEB展示
        location /live {
          proxy_buffer_size  128k;
          proxy_buffers   32 32k;
          alias /build/app/;
          index  index.html;
          add_header 'Access-Control-Allow-Origin' '*' always;
        }

        # 流媒体服务器
        location /livestream.flv {
            proxy_buffer_size  128k;
            proxy_buffers   32 32k;
            proxy_pass http://localhost:8888/livestream.flv;
            add_header 'Access-Control-Allow-Origin' '*' always;
        }

        #error_page  404              /404.html;
        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #server {
	#	listen 8088;
	#	server_name localhost 127.0.0.1;

	#	location / {
	#		try_files $uri $uri/ =404;
	#	}

	#	location = /ws/ {
	#		proxy_pass http://127.0.0.1:1104/ws/;
	#		proxy_http_version 1.1;
	#		proxy_set_header Upgrade $http_upgrade;
	#		proxy_set_header Connection "upgrade";
	#		proxy_read_timeout 90s;
	#	}
	#}
}
